from typing import Optional

from pydantic import BaseModel, Field


class AuthConfig(BaseModel):
    login_url: str
    email_selector: str = Field(
        ...,
        description="Selector (XPath expression) to get email input on the Login page.",
    )
    password_selector: str = Field(
        ...,
        description="Selector (XPath expression) to get password input on the Login page.",
    )
    submit_selector: str = Field(
        ...,
        description="Selector (XPath expression) to get submit button on the Login page.",
    )
    email: str
    password: str
    storage_state_path: str = Field(
        "../auth.json", description="Path to authentication cache JSON file."
    )


class Config(BaseModel):
    base_output_dir: str = Field(
        "",
        description="Base output directory for output files, was generated by actions.",
    )
    base_url: str = Field(
        "", description="Base URL for authentication and action operations."
    )
    auth_config: Optional[AuthConfig] = None
